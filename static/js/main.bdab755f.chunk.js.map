{"version":3,"sources":["Header.js","TodoForm.js","TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Row","className","Col","TodoForm","todoName","setTodoInput","todoItems","setTodoList","Form","Control","value","type","placeholder","onChange","e","target","Button","variant","onClick","completed","id","Math","random","TodoItem","todo","todos","console","log","Card","Body","size","map","item","filter","data","App","useState","Container","length","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdab755f.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport './Header.css';\n\nexport default function Header() {\n    return (\n      <Row className=\"header-container\">\n        <Col>\n          <h3>To-do List by Ken</h3>\n        </Col>\n      </Row>\n    )\n}\n","import React from 'react'\nimport { Form, Button} from 'react-bootstrap'\nimport './TodoForm.css';\n\nexport default function TodoForm({ todoName, setTodoInput, todoItems, setTodoList }) {\n  return (\n    <div className=\"todo-parent-container\">\n      <div className=\"todo-container\" >\n        <div className=\"todo-text-input\" >\n          <Form.Control value={todoName} type=\"text\" placeholder=\"e.g. Feed my doggo\" onChange={(e) => {\n            setTodoInput(e.target.value)\n          }} />\n        </div>\n        <div>\n          <Button variant=\"outline-secondary\" onClick={() => {\n            if (!todoName) {\n              return;\n            }\n            \n            setTodoList([\n              ...todoItems, \n              {\n                todoName, \n                completed: false,\n                id: Math.random() * 100\n              }\n            ])\n            setTodoInput('');\n          }}>Add</Button>\n        </div>\n      </div>\n    </div>\n    \n  )\n}\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap'\nimport './TodoItem.css';\n\nexport default function TodoItem({ todo, todos, setTodoList }) {\n  console.log(todos); \n  return (\n    <Card className=\"todo-item-container\">\n      <Card.Body>\n        { todo.todoName }\n        <div className=\"todo-item-buttons\">\n          {!todo.completed ? <Button variant=\"success\" size=\"sm\" onClick={() => {\n            todos = todos.map(item => {\n              if (item.id === todo.id) {\n                item.completed = true;\n              }\n\n              return item;\n            });\n            setTodoList(todos);\n          }}>\n            Finish\n          </Button> : <Button variant=\"primary\" size=\"sm\" onClick={() => {\n            todos = todos.map(item => {\n              if (item.id === todo.id) {\n                item.completed = false;\n              }\n\n              return item;\n            });\n            setTodoList(todos);\n          }}>\n            Redo\n          </Button>}\n          <Button variant=\"danger\" size=\"sm\" onClick={() => {\n            todos = todos.filter(data => data.id !== todo.id).map(item => item);\n            setTodoList(todos);\n          }}>Delete</Button>\n        </div>\n      </Card.Body>\n    </Card>\n  )\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport './Header';\nimport Header from './Header';\nimport TodoForm from './TodoForm';\nimport TodoItem from './TodoItem';\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport default function App() {\n  const [todoName, setTodoInput] = useState('');\n  const [todoItems, setTodoList] = useState([]);\n\n  console.log(todoItems);\n  return (\n    <Container>\n      <Header />\n      <TodoForm \n        todoName={todoName} \n        setTodoInput={setTodoInput}\n        todoItems={todoItems}\n        setTodoList={setTodoList} />\n\n      <Row className=\"todo-list-container\">\n        <Col>\n          <h4>To-dos</h4>\n          { todoItems.length ? todoItems\n            .filter(data => data.completed === false)\n            .map((todo, key) => <TodoItem todos={todoItems} setTodoList={setTodoList} todo={todo} key={key} />) : ''}\n        </Col>\n        <Col>\n          <h4>Completed To-dos</h4>\n          { todoItems.length ? todoItems\n            .filter(data => data.completed === true)\n            .map((todo, key) => <TodoItem todos={todoItems} setTodoList={setTodoList} todo={todo} key={key} />) : ''}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}